"""Added User model

Revision ID: b728a4e97ecc
Revises: 4b3ebe8c304d
Create Date: 2022-02-12 13:27:13.885510

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy import orm
from passlib.context import CryptContext


# revision identifiers, used by Alembic.
revision = "b728a4e97ecc"
down_revision = "4b3ebe8c304d"
branch_labels = None
depends_on = None

pwd_context = CryptContext(schemes=["bcrypt"], deprecated="auto")

Base = orm.declarative_base()


class User(Base):
    __tablename__ = "users"

    id = sa.Column(sa.Integer, primary_key=True, autoincrement=True)
    username = sa.Column(sa.String, unique=True, nullable=False)
    password = sa.Column(sa.String, nullable=False)
    superuser = sa.Column(sa.Boolean, nullable=True)


class Activity(Base):
    __tablename__ = "activities"

    id = sa.Column(sa.Integer, primary_key=True, index=True, autoincrement=True)
    user_id = sa.Column(sa.Integer, sa.ForeignKey("users.id"))


class Interval(Base):
    __tablename__ = "intervals"

    id = sa.Column(sa.Integer, primary_key=True, index=True, autoincrement=True)
    user_id = sa.Column(sa.Integer, sa.ForeignKey("users.id"))


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("username", sa.String(), nullable=False),
        sa.Column("password", sa.String(), nullable=False),
        sa.Column("email", sa.String(), nullable=True),
        sa.Column("firstname", sa.String(), nullable=True),
        sa.Column("lastname", sa.String(), nullable=True),
        sa.Column("superuser", sa.Boolean(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("email"),
        sa.UniqueConstraint("username"),
    )
    op.add_column("activities", sa.Column("user_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        "activities_user_id_fkey", "activities", "users", ["user_id"], ["id"]
    )
    op.add_column("intervals", sa.Column("user_id", sa.Integer(), nullable=True))
    op.create_foreign_key(
        "intervals_user_id_fkey", "intervals", "users", ["user_id"], ["id"]
    )
    bind = op.get_bind()
    session = orm.Session(bind=bind)
    password = pwd_context.hash("admin")
    admin_user = User(username="admin", password=password, superuser= True)
    session.add(admin_user)
    session.flush()
    id = admin_user.id
    session.execute(sa.update(Interval).values(user_id=id))
    session.execute(sa.update(Activity).values(user_id=id))
    session.commit()
    op.alter_column("intervals", "user_id", nullable=False)
    op.alter_column("activities", "user_id", nullable=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("intervals_user_id_fkey", "intervals", type_="foreignkey")
    op.drop_column("intervals", "user_id")
    op.drop_constraint("activities_user_id_fkey", "activities", type_="foreignkey")
    op.drop_column("activities", "user_id")
    op.drop_table("users")
    # ### end Alembic commands ###
